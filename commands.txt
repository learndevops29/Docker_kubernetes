1.display all pods

kubectl get pods  

2.display pods with detail 

kubectl get pods -o wide

3.display events

kubectl get events

4. creating yAML using command dryrun ( dry-run) option 

kubectl run redis --image=redis123 --dry-run=client -o yaml > redis.yaml

5. create replica set

kubectl create -f replicaset-definition.yml

6. get replicas status

kubectl get replicaset

7. Deleting replica set 

kubectl delete replicaset <name of replicaset>

8. replace replica set

kubectl replace -f replicaset-definition.yml

9. scal up down replicaset 

kubectl scale --replicas=0 -f replicaset_demo2.yaml

10 scal up down otherway 

kubectl scale replicaset myapp-replicaset --replicas=2

11: describe replicaset

kubectl describe replicaset myapp-replicaset 

12: edit the replicaset on go 

kubectl edit replicaset <replicaset-name>

29/07/2021

13: create deployment using yaml file

kubectl create -f deployment.yaml

14: get deployment status 

kubectl get deployment

15: all status 
kubectl get all

16: describe deployement

kubectl describe deployment myapp-deployment

17: directly doing deployment 

syntax: kubectl create deployment <deployment name> --image=<imagename>

kubectl create deployment httpd-frontend --image=httpd:2.4-alpine

18 : scale deployment 

kubectl scale deployment --replicas=3 httpd-frontend

19: edit the deployment 
syntax: kubectl edit deployment <deployment name>
kubectl edit deployment httpd-frontend

